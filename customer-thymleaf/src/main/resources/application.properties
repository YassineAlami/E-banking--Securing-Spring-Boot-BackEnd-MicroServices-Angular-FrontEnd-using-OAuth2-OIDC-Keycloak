server.port=8090
spring.application.name=customer-app

spring.datasource.url=jdbc:h2:mem:customer-db
spring.h2.console.enabled=true


spring.security.oauth2.client.registration.google.clientId=911798576711-7k1p0gprbc4v1fs6oqlp47nfr2ml87pm.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.provider.google.user-name-attribute=email


spring.security.oauth2.client.registration.github.clientId= b668fc836be0470d58cb
spring.security.oauth2.client.registration.github.client-secret=facb3ff52e8230aa1dfafeceee120c4f5ae5a4e8
spring.security.oauth2.client.provider.github.user-name-attribute=login


#had Keycloak machi b7al chkel dyal dok 4 (google fb github okta) maki3erfoch spring ka provider
#3la dakchi derna had rwina kamla
spring.security.oauth2.client.registration.keycloak.client-name=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=security-customer-client
spring.security.oauth2.client.registration.keycloak.client-secret=Dc4bvtMPGcLr0gnZeCovSxlzZ1op7GPH
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#hna tangoulo lih 7dek tauthentifiyi had luser, rederigerh vers had luri
spring.security.oauth2.client.registration.keycloak.redirect-uri=${KEYCLOAK_REDIRECT_URI:http://localhost:8090/login/oauth2/code/sdia-customer-client}
spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/security-part3-realm}

spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username


